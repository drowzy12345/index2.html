<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>FiveM Simple Menu</title>
    <style>
        body {
            background: rgba(22, 22, 22, 0.9);
            font-family: Arial, sans-serif;
            color: #EEE;
            margin: 0;
            padding: 0;
        }
        .menu-container {
            position: absolute;
            top: 70px;
            left: 70px;
            width: 330px;
            background: #23272a;
            border-radius: 10px;
            box-shadow: 0 6px 30px #000000aa;
            padding: 24px 18px 18px 18px;
        }
        .menu-title {
            font-size: 22px;
            margin-bottom: 12px;
            color: #f7bb3e;
            letter-spacing: 1px;
        }
        .menu-section {
            margin-bottom: 14px;
        }
        .menu-section-title {
            font-size: 15px;
            margin-bottom: 8px;
            color: #55bb55;
            border-bottom: 1px solid #333;
            padding-bottom: 2px;
        }
        .menu-button {
            display: block;
            width: 100%;
            background: #2c2f35;
            color: #fff;
            border: 0;
            border-radius: 6px;
            padding: 11px 0;
            font-size: 17px;
            margin-bottom: 8px;
            cursor: pointer;
            transition: background 0.16s;
            outline: none;
        }
        .menu-button:hover, .menu-button.selected {
            background: #4094d7;
        }
        .menu-checkbox-label {
            display: flex;
            align-items: center;
            cursor: pointer;
            margin-bottom: 8px;
            font-size: 16px;
        }
        .menu-checkbox-label input[type="checkbox"] {
            margin-right: 8px;
        }
        .menu-checkbox-label.selected {
            background: #4094d7;
            border-radius: 5px;
            padding-left: 5px;
            padding-right: 5px;
        }
        .menu-section:last-child {
            margin-bottom: 0;
        }
    </style>
</head>
<body>
    <div class="menu-container" id="fivem-menu">
        <div class="menu-title">FiveM Menu</div>
        <div class="menu-section">
            <div class="menu-section-title">General</div>
            <button class="menu-button" onclick="triggerAction('heal')" tabindex="-1">Heal Player</button>
            <button class="menu-button" onclick="triggerAction('armor')" tabindex="-1">Give Armor</button>
            <label class="menu-checkbox-label" tabindex="-1">
                <input type="checkbox" id="godmodeChk" onchange="toggleGodmode(this)">
                Godmode
            </label>
        </div>
        <div class="menu-section">
            <div class="menu-section-title">Vehicles</div>
            <button class="menu-button" onclick="triggerAction('spawn_vehicle')" tabindex="-1">Spawn Vehicle</button>
            <button class="menu-button" onclick="triggerAction('fix_vehicle')" tabindex="-1">Fix Current Vehicle</button>
        </div>
        <div class="menu-section">
            <div class="menu-section-title">Fun</div>
            <button class="menu-button" onclick="triggerAction('dance')" tabindex="-1">Dance Animation</button>
            <button class="menu-button" onclick="triggerAction('rocket')" tabindex="-1">Shoot Rocket</button>
        </div>
    </div>

    <script>
        // For Arrow keys navigation
        document.addEventListener('DOMContentLoaded', () => {
            // Gather all "menu-interactable" elements in order
            // (buttons then our label checkbox)
            const menu = document.getElementById("fivem-menu");
            const interactables = Array.from(menu.querySelectorAll('.menu-button, .menu-checkbox-label'));
            
            let selectedIndex = 0;

            function updateSelection(newIndex) {
                // Remove previous "selected"
                interactables.forEach(el => el.classList.remove('selected'));
                // Wrap-around selection
                if (newIndex < 0) newIndex = interactables.length - 1;
                else if (newIndex >= interactables.length) newIndex = 0;
                selectedIndex = newIndex;
                interactables[selectedIndex].classList.add('selected');
                // Scroll into view if needed (for future)
                interactables[selectedIndex].scrollIntoView({block: "nearest", behavior: "smooth"});
            }

            // Initialize selection
            updateSelection(0);

            document.addEventListener('keydown', function(e) {
                if (["ArrowDown", "ArrowUp", "Enter", " "].includes(e.key)) {
                    e.preventDefault();
                }
                if (e.key === "ArrowDown") {
                    updateSelection(selectedIndex + 1);
                } else if (e.key === "ArrowUp") {
                    updateSelection(selectedIndex - 1);
                } else if (e.key === "Enter" || e.key === " ") {
                    const el = interactables[selectedIndex];
                    if (el.classList.contains('menu-button')) {
                        // Simulate click
                        el.click();
                    } else if (el.classList.contains('menu-checkbox-label')) {
                        // Toggle the checkbox
                        const cb = el.querySelector('input[type="checkbox"]');
                        cb.checked = !cb.checked;
                        toggleGodmode(cb);
                    }
                }
            });

            // Support mouse hovering: move selection to hovered button/checkbox
            interactables.forEach((el, idx) => {
                el.addEventListener('mouseenter', () => {
                    updateSelection(idx);
                });
            });
        });

        // If used with FiveM NUI, replace with PostMessage to Lua or C#
        function triggerAction(action) {
            // Example: send event to FiveM scripts (if needed)
            // fetch(`https://${GetParentResourceName()}/onMenuAction`, {method: 'POST', body: JSON.stringify({ action })})
            alert('Selected action: ' + action);
        }
        function toggleGodmode(checkbox) {
            // Example: send toggle to FiveM (if needed)
            // fetch(`https://${GetParentResourceName()}/toggleGodmode`, {method: 'POST', body: JSON.stringify({ enabled: checkbox.checked })})
            alert('Godmode: ' + (checkbox.checked ? 'ON' : 'OFF'));
        }
    </script>
</body>
</html>
